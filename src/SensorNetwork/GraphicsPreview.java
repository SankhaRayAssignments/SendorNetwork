/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GraphicsPreview.java
 *
 * Created on Aug 13, 2011, 10:00:02 PM
 */
package SensorNetwork;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Saheb
 */
public class GraphicsPreview extends javax.swing.JFrame {

    /** Creates new form GraphicsPreview */
    public GraphicsPreview() {

        initComponents();
        setSize(Globals.sWidth, Globals.sHeight);
        Utility.SetFramePosition(this);
        //System.out.print(this.getWeight() + " : " + this.getWidth());
        jPanel_Top.resize(Globals.sWidth, 50);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Top = new javax.swing.JPanel();
        cmdSpanningTree = new javax.swing.JButton();
        cmdAdjacencyMatrix = new javax.swing.JButton();
        cmdSaveGraph = new javax.swing.JButton();
        cmdStartAlgo = new javax.swing.JButton();
        cmdWriteData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GraphicsPreview");
        setName("GraphicsPreview"); // NOI18N

        jPanel_Top.setBackground(new java.awt.Color(0, 0, 102));
        jPanel_Top.setForeground(new java.awt.Color(255, 255, 0));
        jPanel_Top.setPreferredSize(new java.awt.Dimension(1024, 10));

        cmdSpanningTree.setText("SpanningTree");
        cmdSpanningTree.setName("SpanningTree"); // NOI18N
        cmdSpanningTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSpanningTreeActionPerformed(evt);
            }
        });

        cmdAdjacencyMatrix.setText("Adjacency Matrix");
        cmdAdjacencyMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAdjacencyMatrixActionPerformed(evt);
            }
        });

        cmdSaveGraph.setText("Save Graph");
        cmdSaveGraph.setName("SpanningTree"); // NOI18N
        cmdSaveGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveGraphActionPerformed(evt);
            }
        });

        cmdStartAlgo.setText("Start Algo");
        cmdStartAlgo.setEnabled(false);
        cmdStartAlgo.setName("SpanningTree"); // NOI18N
        cmdStartAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartAlgoActionPerformed(evt);
            }
        });

        cmdWriteData.setText("Write Data");
        cmdWriteData.setEnabled(false);
        cmdWriteData.setName("SpanningTree"); // NOI18N
        cmdWriteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdWriteDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_TopLayout = new javax.swing.GroupLayout(jPanel_Top);
        jPanel_Top.setLayout(jPanel_TopLayout);
        jPanel_TopLayout.setHorizontalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(cmdSaveGraph)
                .addGap(10, 10, 10)
                .addComponent(cmdSpanningTree)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdAdjacencyMatrix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdStartAlgo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdWriteData)
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jPanel_TopLayout.setVerticalGroup(
            jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSaveGraph)
                    .addComponent(cmdSpanningTree)
                    .addComponent(cmdAdjacencyMatrix)
                    .addComponent(cmdStartAlgo)
                    .addComponent(cmdWriteData))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_Top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_Top, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSpanningTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSpanningTreeActionPerformed
        // TODO add your handling code here:
        Globals.sPrims = new Prims(Globals.sEdges, Globals.sNodeList.size());
        Globals.sPrims.startAlgo();
        Globals.sSpanningTreeEdges = Globals.sPrims.getSpanningTreeEdges();
        Globals.sSpanningTree = Globals.sPrims.getTree();
        JOptionPane.showMessageDialog(this, "Spanning Tree Created");
        cmdSpanningTree.setEnabled(false);
        cmdStartAlgo.setEnabled(true);
        repaint();
}//GEN-LAST:event_cmdSpanningTreeActionPerformed

    private void cmdSaveGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveGraphActionPerformed
        // TODO add your handling code here:
        Utility.SaveData(this);
    }//GEN-LAST:event_cmdSaveGraphActionPerformed

    private void cmdStartAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartAlgoActionPerformed
        // TODO add your handling code here:
        Globals.sScheduler = new Scheduler(Globals.sSpanningTree);
        Globals.sScheduler.PerformSchedulingAlgo();
        JOptionPane.showMessageDialog(this, "Scheduling Completed");
        cmdStartAlgo.setEnabled(false);
        cmdWriteData.setEnabled(true);
    }//GEN-LAST:event_cmdStartAlgoActionPerformed

    private void cmdAdjacencyMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAdjacencyMatrixActionPerformed
        // TODO add your handling code here:
        ArrayList<String> msg = new ArrayList<String>();
        for (int i = 0; i < 10; i++) {
            msg.add(new String("" + i));
        }
        Utility.WriteMessageToFile(this, msg);
    }//GEN-LAST:event_cmdAdjacencyMatrixActionPerformed

    private void cmdWriteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdWriteDataActionPerformed
        // TODO add your handling code here:
        Utility.WriteMessageToFile(this, Globals.sScheduler.getMessages());
    }//GEN-LAST:event_cmdWriteDataActionPerformed

    @Override
    public void paint(Graphics g) {

        super.paint(g);

        Graphics2D g2d = (Graphics2D) g;
        int iNode = 1;
        // Draw Nodes
        for (Node n : Globals.sNodeList) {
            //System.out.println(n.getX() +  n.getY());
            g2d.setColor(Color.BLACK);
            g2d.setFont(new Font("serif", Font.ITALIC + Font.BOLD, 20));
            g2d.drawString("" + iNode, n.getX() + 5, n.getY() + 10);
            g2d.setColor(Color.BLUE);
            g2d.fill(new Ellipse2D.Double(n.getX(), n.getY(), 6, 6));
            iNode++;
        }
        // Draw Connections
        g2d.setFont(new Font("serif", Font.PLAIN, 15));
        g2d.setColor(Color.BLACK);
        for (Edge e : Globals.sEdges) {

            if (e.getStatus() == Edge.UNUSED) {
                g2d.setColor(Color.RED);
            } else if (e.getStatus() == Edge.CHOSEN) {
                g2d.setColor(Color.BLUE);
            } else if (e.getStatus() == Edge.CONSIDERED) {
                g2d.setColor(Color.GREEN);
            }

            int x1 = e.getV1().getX();
            int y1 = e.getV1().getY();
            int x2 = e.getV2().getX();
            int y2 = e.getV2().getY();
            g2d.drawLine(x1, y1, x2, y2);
            g2d.drawString("" + e.getWeight(), (x1 + x2) / 2, (y1 + y2) / 2);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAdjacencyMatrix;
    private javax.swing.JButton cmdSaveGraph;
    private javax.swing.JButton cmdSpanningTree;
    private javax.swing.JButton cmdStartAlgo;
    private javax.swing.JButton cmdWriteData;
    private javax.swing.JPanel jPanel_Top;
    // End of variables declaration//GEN-END:variables
}
